services:

  nginx-proxy:
    image: nginxproxy/nginx-proxy:latest
    container_name: proxy
    restart: unless-stopped
    expose:
      - "80"
    build:
      context: ./data/nginx-proxy
    environment:
      - DHPARAM_GENERATION=false
      - VIRTUAL_PORT=80
      - VIRTUAL_HOST=hub.ensg-sdi.docker
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      back-net:
        ipv4_address: 172.24.0.3

  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    restart: unless-stopped
    expose:
      - "3000"
    # volumes:
    #   - ./config/homepage:/app/config
    #   - homepage-public:/app/public
    networks:
      back-net:
        ipv4_address: 172.24.0.4

  postgis:
    container_name: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB} #optional (specify default database instead of $POSTGRES_DB)
    ports:
      - "5432:5432"
    restart: always
    networks:
      back-net:
        ipv4_address: 172.24.0.5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    depends_on:
      - postgis
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - "5050:80"
    networks:
      back-net:
        ipv4_address: 172.24.0.6
    restart: always

  geoserver:
    image: georchestra/geoserver:latest
    depends_on:
      - postgis
    networks:
      back-net:
        ipv4_address: 172.24.0.7
    ports:
      - 8083:8080
    # environment:
    #   - JAVA_OPTIONS=-Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
    #   - XMS=256M
    #   - XMX=8G
    restart: always

#  jupyter:

  filebw:
    image: filebrowser/filebrowser:s6
    networks:
      back-net:
        ipv4_address: 172.24.0.8
    ports:
      - 8081:80
    restart: always

  portainer:
    image: portainer/portainer-ce:alpine
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      back-net:
        ipv4_address: 172.24.0.9
    ports:
      - 9000:9000
      - 8082:8000
    restart: always

networks:
  back-net:
    ipam:
      config:
        - subnet: "172.24.0.0/16"
